; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; nREPL Connection was closed
; Starting Jack-in Terminal: cmd.exe /d /c lein update-in :dependencies conj [nrepl,"0.8.3"] -- update-in :plugins conj [cider/cider-nrepl,"0.25.8"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉aoc-19.core꞉> 
; Jack-in done.
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3235550 4850462]
nil
clj꞉aoc-19.core꞉> 
#'aoc-19.core/-main
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3235550 4850462]
nil
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3235550 4850462]
nil
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3235550 4850462]
nil
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3535548 5300424]
nil
clj꞉aoc-19.core꞉> 
#'aoc-19.core/-main
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3235550 4850462]
nil
clj꞉aoc-19.core꞉> 
#'aoc-19.d2/-main
clj꞉aoc-19.d2꞉> 
(-main)
["oi" "oioi"]
clj꞉aoc-19.d2꞉> 
#'aoc-19.core/-main
clj꞉aoc-19.core꞉> 
(-main)

day 1:
[3235550 4850462]

day 2:
[oi oioi]
nil
clj꞉aoc-19.core꞉> 
nil
clj꞉aoc-19.ic꞉> 
:aoc-19.ic/intcode
clj꞉aoc-19.ic꞉> 
true
clj꞉aoc-19.ic꞉> 
true
clj꞉aoc-19.ic꞉> 
true
clj꞉aoc-19.ic꞉> 
false
clj꞉aoc-19.ic꞉> 
[1 2 3]
clj꞉aoc-19.ic꞉> 
:clojure.spec.alpha/invalid
clj꞉aoc-19.ic꞉> 
#'aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
(run "oi")
"oi"
clj꞉aoc-19.ic꞉> 
(run "ola")
"oi"
clj꞉aoc-19.ic꞉> 
(run 1)
"oi"
clj꞉aoc-19.ic꞉> 
#'aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
(doc run)
; Syntax error compiling at (c:\code\clj\aoc-19\.calva\output-window\output.calva-repl:109:1).
; Unable to resolve symbol: doc in this context
clj꞉aoc-19.ic꞉> 
(clojure.repl/doc run)
-------------------------
aoc-19.ic/run
([intcode])
Spec
  args: (and (cat :intcode vector?) (valid? :aoc-19.ic/intcode (:intcode %)))
  ret: any?
nil
clj꞉aoc-19.ic꞉> 
#'aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
(run 1)
; Execution error (AssertionError) at aoc-19.ic/run (form-init3560614174162713070.clj:9).
; Assert failed: (s/valid? :aoc-19.ic/intcode intcode)
clj꞉aoc-19.ic꞉> 
(run [])
; Execution error (AssertionError) at aoc-19.ic/run (form-init3560614174162713070.clj:9).
; Assert failed: (s/valid? :aoc-19.ic/intcode intcode)
clj꞉aoc-19.ic꞉> 
(run [1])
"oi"
clj꞉aoc-19.ic꞉> 
(run [1 2 3])
"oi"
clj꞉aoc-19.ic꞉> 
aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
#'aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
(clojure.repl/doc run)
-------------------------
aoc-19.ic/run
([intcode])
  takes an intcode and runs from the start
Spec
  args: (and (cat :intcode vector?) (valid? :aoc-19.ic/intcode (:intcode %)))
  ret: any?
nil
clj꞉aoc-19.ic꞉> 
(s/valid? ::intcode '(1 2 3))
true
clj꞉aoc-19.ic꞉> 
:aoc-19.ic/intcode
clj꞉aoc-19.ic꞉> 
(s/valid? ::intcode '(1 2 3))
false
clj꞉aoc-19.ic꞉> 
aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
#'aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
(s/valid? run [1 2 3])
true
clj꞉aoc-19.ic꞉> 
#'aoc-19.ic/run
clj꞉aoc-19.ic꞉> 
(s/valid? run [1 2 3])
true
clj꞉aoc-19.ic꞉> 
(s/valid? run [])
; Execution error (AssertionError) at aoc-19.ic/run (form-init3560614174162713070.clj:9).
; Assert failed: (s/valid? :aoc-19.ic/intcode intcode)
clj꞉aoc-19.ic꞉> 
(s/valid? run [""])
; Execution error (AssertionError) at aoc-19.ic/run (form-init3560614174162713070.clj:9).
; Assert failed: (s/valid? :aoc-19.ic/intcode intcode)
clj꞉aoc-19.ic꞉> 
